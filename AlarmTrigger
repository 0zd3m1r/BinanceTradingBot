#!/usr/bin/env python
import pandas
from binance.client import Client
import numpy as np
import time
import telegram
import emoji
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
class BinanceConnection:
    def __init__(self, file):
        self.connect(file)

    """ Creates Binance client """
    def connect(self, file):
        lines = [line.rstrip('\n') for line in open(file)]
        key = lines[0]
        secret = lines[1]
        self.client = Client(key, secret)

if __name__ == '__main__':
    credentials = '<PATH>'
    markets = '<PATH>AlarmPosition' #WriteLongAlarm'ın oluşturduğu
    connection = BinanceConnection(credentials)
    interval = '1m'
    limit = 500
    bot = telegram.Bot(token="<TOKEN>")
    chatid = "<CHATID>"
    fireemoji = emoji.emojize(':fire:')
    shitemoji = '\U0001F4A7'
    thumbsup = '\U0001F44D'
    thumbsdown = '\U0001F44E'
    while True:
        try:
            with open(markets) as fp:
                lines = fp.read().splitlines()
                count = 0
                try:
                   for line in lines:
                        symbol = lines[count]
                        try:
                           klines = connection.client.get_klines(symbol=symbol, interval=interval, limit=limit)
                           close = [float(entry[4]) for entry in klines]
                           alarm=lines[count+1]
                           def telegramalert(id,icon,fibolevel):
                            bot.sendMessage(chat_id=id, text=icon +symbol+" " + alarm+" oldu!"+fibolevel)
                           intervalfibo = '30m'
                           klinesfibo = connection.client.get_klines(symbol=symbol, interval=intervalfibo, limit=limit)
                           closefibo = [float(entry[4]) for entry in klinesfibo]
                           fibo_array = np.asarray(closefibo)
                           df = fibo_array[-256:]
                           maxr = df.max()
                           minr = df.min()
                           diff = maxr - minr
                           level0 = maxr - (0*diff)     #level 0 tepe noktası
                           level1 = maxr - (0.236*diff) #%236short
                           level2 = maxr - (0.382*diff) #%382 önemli direnç/destek (SHORT)
                           level3 = maxr - (0.5*diff)   #%50
                           level4 = maxr - (0.618*diff) #%618 önemli direnç destek (LONG)
                           level5 = maxr - (0.786*diff) #%786 alt destek
                           level6 = maxr - (1*diff)     #%1 dip destek
                           level = 0
                           x = close[-1]
                           if x < level0 and x > level1:
                            level = 1
                            candlel = "\U0001F531"
                           elif x < level1 and x > level2:
                            level = 2
                            candlel = "\U0001F531"*2
                           elif x < level2 and x > level3:
                            level = 3
                            candlel = "\U0001F531"*3
                           elif x < level3 and x > level4:
                            level = 4
                            candlel = "\U0001F531"*4
                           elif x < level4 and x > level5:
                            level = 5
                            candlel = "\U0001F531"*5
                           elif x < level5 and x > level6:
                            level = 6
                            candlel = "\U0001F531"*6
                           elif x < level6:
                            level = 7
                            candlel = "\U0001F531"*7
                           fibolevel = "\n \U0001F4CA FİBONACCI SEVİYELERİ -Şu anki seviyesi: "+str(level)+" "+candlel+"\nSeviye 0: "+str("{:.8f}".format(level0))+": Tepe noktası %0 \U0001F4B2 \n"+"Seviye 1: "+str("{:.8f}".format(level1))+": Direnç/Destek noktası %236\n"+"Seviye 2: "+str("{:.8f}".format(level2))+": Önemli Direnç/Destek noktası(SHORT)  %382 \U0001F4AA \n"+"Seviye 3: "+str("{:.8f}".format(level3))+": Ara nokta %50\n"+"Seviye 4: "+str("{:.8f}".format(level4))+": Önemli Direnç/Destek noktası(LONG) %618 \U0001F4AA \n"+"Seviye 5: "+str("{:.8f}".format(level5))+": Alt Destek noktası %786\n"+"Seviye 6: "+str("{:.8f}".format(level6))+": Dip Destek noktası %1\n"
                           def telegramalertfibo(id,icon,fibolevel):
                            bot.sendMessage(chat_id=id, text=icon +symbol+" Şu anki değeri: "+str("{:.8f}".format(close[-1]))+" ve seviyesi LONG seviyelerinde!" +fibolevel)
                           if (alarm<="{:.8f}".format(close[-1]) and alarm>"{:.8f}".format(close[-2])):
                            telegramalert(chatid,'\U0001F7E2',fibolevel)
                           elif (alarm>="{:.8f}".format(close[-1]) and alarm<"{:.8f}".format(close[-2])):
                            telegramalert(chatid,'\U0001F534',fibolevel)
                           print(symbol,alarm,"{:.8f}".format(close[-1]),"{:.8f}".format(close[-2])+fibolevel)
                           count += 1
                        except:
                         count+=1
                except Exception as exp:
                    print(exp.status_code, flush=True)
                    print(exp.message, flush=True)
            break

        except Exception as exp:
            print(exp.status_code, flush=True)
            print(exp.message, flush=True)
